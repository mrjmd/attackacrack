"""Initial migration with all current models

Revision ID: c4c776fc75e9
Revises: 
Create Date: 2025-08-01 13:56:54.200090

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c4c776fc75e9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create user table (singular, not users)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),  # Will be upgraded to 256 in later migration
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('openphone_user_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('openphone_user_id')
    )
    
    # Create phone_number table
    op.create_table('phone_number',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('openphone_id', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('openphone_id'),
    sa.UniqueConstraint('phone_number')
    )
    
    # Create csv_import table
    op.create_table('csv_import',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('imported_at', sa.DateTime(), nullable=False),
    sa.Column('imported_by', sa.String(length=100), nullable=True),
    sa.Column('total_rows', sa.Integer(), nullable=True),
    sa.Column('successful_imports', sa.Integer(), nullable=True),
    sa.Column('failed_imports', sa.Integer(), nullable=True),
    sa.Column('import_type', sa.String(length=50), nullable=True),
    sa.Column('import_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create contact table
    op.create_table('contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('contact_metadata', sa.JSON(), nullable=True),
    sa.Column('csv_import_id', sa.Integer(), nullable=True),
    sa.Column('import_source', sa.String(length=100), nullable=True),
    sa.Column('imported_at', sa.DateTime(), nullable=True),
    sa.Column('quickbooks_customer_id', sa.String(length=50), nullable=True),
    sa.Column('quickbooks_sync_token', sa.String(length=50), nullable=True),
    sa.Column('customer_type', sa.String(length=20), nullable=True),
    sa.Column('payment_terms', sa.String(length=50), nullable=True),
    sa.Column('credit_limit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax_exempt', sa.Boolean(), nullable=True),
    sa.Column('total_sales', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('outstanding_balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('last_payment_date', sa.DateTime(), nullable=True),
    sa.Column('average_days_to_pay', sa.Integer(), nullable=True),
    sa.Column('lead_source', sa.String(length=100), nullable=True),
    sa.Column('customer_since', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['csv_import_id'], ['csv_import.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('quickbooks_customer_id')
    )
    
    # Create invite_token table
    op.create_table('invite_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    
    # Create conversation table
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('openphone_id', sa.String(length=100), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('participants', sa.String(length=500), nullable=True),
    sa.Column('phone_number_id', sa.String(length=100), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_type', sa.String(length=20), nullable=True),
    sa.Column('last_activity_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('openphone_id')
    )
    
    # Create property table
    op.create_table('property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('property_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create campaign_list table
    op.create_table('campaign_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('filter_criteria', sa.JSON(), nullable=True),
    sa.Column('is_dynamic', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create contact_csv_import association table
    op.create_table('contact_csv_import',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('csv_import_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_new', sa.Boolean(), nullable=True),
    sa.Column('data_updated', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['csv_import_id'], ['csv_import.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact_id', 'csv_import_id', name='unique_contact_csv_import')
    )
    
    # Create contact_flag table
    op.create_table('contact_flag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('flag_type', sa.String(length=50), nullable=False),
    sa.Column('flag_reason', sa.Text(), nullable=True),
    sa.Column('applies_to', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create job table
    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create activity table
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('openphone_id', sa.String(length=100), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.Column('activity_type', sa.String(length=20), nullable=True),
    sa.Column('direction', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('from_number', sa.String(length=20), nullable=True),
    sa.Column('to_numbers', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('phone_number_id', sa.String(length=100), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('email_from', sa.String(length=120), nullable=True),
    sa.Column('email_to', sa.JSON(), nullable=True),
    sa.Column('email_cc', sa.JSON(), nullable=True),
    sa.Column('email_bcc', sa.JSON(), nullable=True),
    sa.Column('email_subject', sa.String(length=200), nullable=True),
    sa.Column('email_thread_id', sa.String(length=100), nullable=True),
    sa.Column('smartlead_id', sa.String(length=100), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('recording_url', sa.String(length=500), nullable=True),
    sa.Column('voicemail_url', sa.String(length=500), nullable=True),
    sa.Column('answered_at', sa.DateTime(), nullable=True),
    sa.Column('answered_by', sa.String(length=100), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('initiated_by', sa.String(length=100), nullable=True),
    sa.Column('forwarded_from', sa.String(length=100), nullable=True),
    sa.Column('forwarded_to', sa.String(length=100), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('ai_next_steps', sa.Text(), nullable=True),
    sa.Column('ai_transcript', sa.JSON(), nullable=True),
    sa.Column('ai_content_status', sa.String(length=50), nullable=True),
    # activity_metadata will be added in migration 2792ed2d7978
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('openphone_id')
    )
    
    # Create campaign table
    op.create_table('campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('template_a', sa.Text(), nullable=True),
    sa.Column('template_b', sa.Text(), nullable=True),
    sa.Column('quiet_hours_start', sa.Time(), nullable=True),
    sa.Column('quiet_hours_end', sa.Time(), nullable=True),
    sa.Column('on_existing_contact', sa.String(length=50), nullable=True),
    sa.Column('campaign_type', sa.String(length=20), nullable=True),
    sa.Column('audience_type', sa.String(length=20), nullable=True),
    sa.Column('daily_limit', sa.Integer(), nullable=True),
    sa.Column('business_hours_only', sa.Boolean(), nullable=True),
    sa.Column('ab_config', sa.JSON(), nullable=True),
    sa.Column('channel', sa.String(length=10), nullable=True),
    sa.Column('list_id', sa.Integer(), nullable=True),
    sa.Column('adapt_script_template', sa.Text(), nullable=True),
    sa.Column('days_between_contacts', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['list_id'], ['campaign_list.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create campaign_list_member table
    op.create_table('campaign_list_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('list_id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('added_by', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('import_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['list_id'], ['campaign_list.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('list_id', 'contact_id', name='unique_list_member')
    )
    
    # Create appointment table
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('google_calendar_event_id', sa.String(length=200), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create quote table
    op.create_table('quote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('quickbooks_estimate_id', sa.String(length=50), nullable=True),
    sa.Column('quickbooks_sync_token', sa.String(length=50), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payment_terms', sa.String(length=50), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quickbooks_estimate_id')
    )
    
    # Create invoice table
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('quickbooks_invoice_id', sa.String(length=50), nullable=True),
    sa.Column('quickbooks_sync_token', sa.String(length=50), nullable=True),
    sa.Column('quote_id', sa.Integer(), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('balance_due', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('invoice_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('payment_status', sa.String(length=20), nullable=True),
    sa.Column('paid_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quote.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quickbooks_invoice_id')
    )
    
    # Create media_attachment table
    op.create_table('media_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('source_url', sa.String(length=500), nullable=False),
    sa.Column('local_path', sa.String(length=500), nullable=True),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create campaign_membership table
    op.create_table('campaign_membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('variant_sent', sa.String(length=1), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    # sent_activity_id will be added in migration 2792ed2d7978
    sa.Column('reply_activity_id', sa.Integer(), nullable=True),
    sa.Column('pre_send_flags', sa.JSON(), nullable=True),
    sa.Column('override_action', sa.String(length=20), nullable=True),
    sa.Column('response_sentiment', sa.String(length=20), nullable=True),
    sa.Column('message_sent', sa.Text(), nullable=True),
    sa.Column('previous_contact_date', sa.DateTime(), nullable=True),
    sa.Column('previous_contact_type', sa.String(length=50), nullable=True),
    sa.Column('previous_response', sa.String(length=50), nullable=True),
    sa.Column('script_adapted', sa.Boolean(), nullable=True),
    # membership_metadata will be added in migration 2792ed2d7978
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['reply_activity_id'], ['activity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create product table
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('quickbooks_item_id', sa.String(length=50), nullable=True),
    sa.Column('quickbooks_sync_token', sa.String(length=50), nullable=True),
    sa.Column('item_type', sa.String(length=20), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('quantity_on_hand', sa.Integer(), nullable=True),
    sa.Column('reorder_point', sa.Integer(), nullable=True),
    sa.Column('taxable', sa.Boolean(), nullable=True),
    sa.Column('income_account', sa.String(length=100), nullable=True),
    sa.Column('expense_account', sa.String(length=100), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quickbooks_item_id')
    )
    
    # Create quote_line_item table
    op.create_table('quote_line_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quote_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('line_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quickbooks_line_id', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quote.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create invoice_line_item table
    op.create_table('invoice_line_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('line_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quickbooks_line_id', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create setting table
    op.create_table('setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    
    # Create webhook_event table
    op.create_table('webhook_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.String(length=100), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=True),
    sa.Column('api_version', sa.String(length=10), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id')
    )
    
    # Create quickbooks_auth table
    op.create_table('quickbooks_auth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.String(length=50), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_id')
    )
    
    # Create quickbooks_sync table
    op.create_table('quickbooks_sync',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.String(length=50), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=True),
    sa.Column('local_table', sa.String(length=50), nullable=True),
    sa.Column('sync_version', sa.String(length=50), nullable=True),
    sa.Column('last_synced', sa.DateTime(), nullable=True),
    sa.Column('sync_status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_type', 'entity_id', name='unique_qb_entity')
    )
    
    # Note: todos table will be created in the next migration (5666d6960685)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quickbooks_sync')
    op.drop_table('quickbooks_auth')
    op.drop_table('webhook_event')
    op.drop_table('setting')
    op.drop_table('invoice_line_item')
    op.drop_table('quote_line_item')
    op.drop_table('product')
    op.drop_table('campaign_membership')
    op.drop_table('media_attachment')
    op.drop_table('invoice')
    op.drop_table('quote')
    op.drop_table('appointment')
    op.drop_table('campaign_list_member')
    op.drop_table('campaign')
    op.drop_table('activity')
    op.drop_table('job')
    op.drop_table('contact_flag')
    op.drop_table('contact_csv_import')
    op.drop_table('campaign_list')
    op.drop_table('property')
    op.drop_table('conversation')
    op.drop_table('invite_token')
    op.drop_table('contact')
    op.drop_table('csv_import')
    op.drop_table('phone_number')
    op.drop_table('user')
    # ### end Alembic commands ###